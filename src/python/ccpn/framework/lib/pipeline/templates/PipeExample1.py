
#### GUI IMPORTS
from ccpn.ui.gui.widgets.PipelineWidgets import GuiPipe
from ccpn.ui.gui.widgets.PulldownList import PulldownList
from ccpn.ui.gui.widgets.Label import Label

#### NON GUI IMPORTS
from ccpn.framework.lib.pipeline.PipeBase import SpectraPipe, PIPE_USER


########################################################################################################################
###   Attributes:
###   Used in setting the dictionary keys on _kwargs either in GuiPipe and Pipe
########################################################################################################################

ReferenceSpectrum = 'referenceSpectrum'
PipeName = 'Demo Gui'

########################################################################################################################
##########################################      ALGORITHM       ########################################################
########################################################################################################################


def myAlgorithm(data):
    # do something with the data
    return data


########################################################################################################################
##########################################     GUI PIPE    #############################################################
########################################################################################################################

class DemoGuiPipe(GuiPipe):
    pipeName = PipeName


    def __init__(self, name=pipeName, parent=None, project=None, **kwds):
        super(DemoGuiPipe, self)
        GuiPipe.__init__(self, parent=parent, name=name, project=project, **kwds)
        self._parent = parent

        ## add widgets to pipeFrame using Base grid=(i,ii) or self.pipeLayout.addWidget(widgetName)
        ## suggested to use setattr to give the same variable name as the one used in the pipe _kwarg.
        ## the guiPipe _kwarg is autogenerated from the variable name of widget and value.

        demoLabel = Label(self.pipeFrame, 'Reference Spectrum', grid=(0, 0))
        setattr(self, ReferenceSpectrum, PulldownList(self.pipeFrame, texts=['spectrum1', 'spectrum2'], grid=(0, 1)))


########################################################################################################################
##########################################       PIPE      #############################################################
########################################################################################################################


class DemoPipe1(SpectraPipe):
    guiPipe = DemoGuiPipe
    pipeName = PipeName
    pipeCategory = PIPE_USER

    _kwargs = {
        ReferenceSpectrum: 'spectrum2'
        }

    def runPipe(self, spectra):
        output = myAlgorithm(spectra)
        return spectra


DemoPipe1.register() # comment-out this line to remove the pipe from the Gui Pipeline
