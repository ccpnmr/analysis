from PyQt5 import QtGui, QtWidgets

PI = 3.1415926535898

MIMETYPE_ELEMENT = 'application/x-ccpn-element'
MIMETYPE_COMPOUND = 'application/x-ccpn-compound'
MIMETYPE = 'application/x-ccpn'

EQUIVALENT = 'equivalent'
PROCHIRAL = 'prochiral'
NONSTEREO = 'prochiral'
AROMATIC = 'aromatic'

CCPN_MOLTYPES = ('other', 'protein', 'DNA', 'RNA', 'carbohydrate')

ELEMENTS = { 'Common':['H','C','N','O','P','S','Se'],
             'Halogens':['F','Cl','Br','I'],
             'Others':['B', 'Si','As'], }
             
COVALENT_ELEMENTS = set(['H','C','N','O','P','S','Se','F','Cl','Br','I','B', 'Si','As'])

PERIODIC_TABLE = [
                 ['Fr','Cs','Rb','K','Na','Li','H',],
                 ['Ra','Ba','Sr','Ca','Mg','Be',None],
                 ['Ac','La',None,None,None,None,None],
                 ['Th','Ce',None,None,None,None,None],
                 ['Pa','Pr',None,None,None,None,None],
                 ['U','Nd',None,None,None,None,None],
                 ['Np','Pm',None,None,None,None,None],
                 ['Pu','Sm',None,None,None,None,None],
                 ['Am','Eu',None,None,None,None,None],
                 ['Cm','Gd',None,None,None,None,None],
                 ['Bk','Tb',None,None,None,None,None],
                 ['Cf','Dy',None,None,None,None,None],
                 ['Es','Ho',None,None,None,None,None],
                 ['Fm','Er',None,None,None,None,None],
                 ['Md','Tm',None,None,None,None,None],
                 ['No','Yb',None,None,None,None,None],
                 ['Lr','Lu','Y','Sc',None,None,None],
                 ['Rf','Hf','Zr','Ti',None,None,None],
                 ['Db','Ta','Nb','V',None,None,None],
                 ['Sg','W','Mo','Cr',None,None,None],
                 ['Bh','Re','Tc','Mn',None,None,None],
                 ['Hs','Os','Ru','Fe',None,None,None],
                 ['Mt','Ir','Rh','Co',None,None,None],
                 ['Ds','Pt','Pd','Ni',None,None,None],
                 ['Rg','Au','Ag','Cu',None,None,None],
                 ['Cn','Hg','Cd','Zn',None,None,None],
                 [None,'Tl','In','Ga','Al','B',None],
                 [None,'Pb','Sn','Ge','Si','C',None],
                 [None,'Bi','Sb','As','P','N',None],
                 [None,'Po','Te','Se','S','O',None],
                 [None,'At','I','Br','Cl','F',None],
                 [None,'Rn','Xe','Kr','Ar','Ne','He'],
                 ]

VAR_TAG_ORDER = ['neutral','prot','deprot','link','stereo']
VAR_TAG_ORDER += ['stereo_%d' % (i,) for i in range(8)]

LINKS = [('Previous residue', 'prev', 'link-prev.png'),
         ('Next residue', 'next', 'link-next.png'),
         ('Generic link', 'link', 'link.png')] 
LINK = 'link'

DISALLOWED = [set([LINK, LINK]),
              set(['H','H']),
              set(['H', LINK])]

HIGHLIGHT    = QtGui.QColor( 10, 250,   0, 255)
HIGHLIGHT_BG = QtGui.QColor( 10, 250,   0,  64)
ATOM_NAME_FG = QtGui.QColor(255, 255, 255, 128)
LINK_COLOR   = QtGui.QColor( 50, 200,  50, 128)
EQUIV_COLOR  = QtGui.QColor(255,  128,  128, 128)
PROCHIRAL_COLOR  = QtGui.QColor(128,  192,  255, 128)
ELEMENT_FONT = QtGui.QFont("DejaVu Sans Mono", 9)
ELEMENT_DATA = {
            LINK:(1, LINK_COLOR),
            # element: (default valances, colour, (common valances))
            'C': (4,QtGui.QColor(180, 180, 180, 255), (4,)),
            'N': (3,QtGui.QColor(110, 110, 255, 255), (3,)),
            'H': (1,QtGui.QColor(255, 255, 255, 255), (1,)),
            'O': (2,QtGui.QColor(255,  80,  80, 255), (2,)),
            'P': (5,QtGui.QColor(255,  80, 255, 255), (5,)),
            'S': (2,QtGui.QColor(255, 180,  50, 255), (2,4,6)),
            'Se':(2,QtGui.QColor(255, 100,  50, 255), (2,)),
            'F': (1,QtGui.QColor(255, 255, 128, 255), (1,)),
            'Cl':(1,QtGui.QColor(128, 255,  80, 255), (1,)),
            'Br':(1,QtGui.QColor(255, 128,  80, 255), (1,)),
            'I': (1,QtGui.QColor(150,  80, 255, 255), (1,)),
            'B': (3,QtGui.QColor(120, 120,  80, 255), (3,)),
            'Si':(4,QtGui.QColor(200, 200, 255, 255), (4,)),
            'As':(3,QtGui.QColor(230,  80, 255, 255), (3,)),
            'Be':(2,QtGui.QColor(255, 255, 160, 255), (2,)),
            'Mg':(2,QtGui.QColor(255, 255, 160, 255), (0,2,)),
            'Al':(3,QtGui.QColor(200, 200, 255, 255), (0,3,)),
            'Fe':(0,QtGui.QColor(160, 160, 255, 255), (0,)),
            '?': (3,QtGui.QColor(160, 160, 255, 255), (1,2,3,4)),}

PERIODIC_TABLE_COLORS = (QtGui.QColor(255, 160, 160, 255),
                         QtGui.QColor(255, 255, 160, 255),
                         QtGui.QColor(160, 255, 160, 255),
                         QtGui.QColor(160, 160, 255, 255),
                         QtGui.QColor(200, 200, 255, 255),
                         QtGui.QColor(255, 160, 255, 255))
                         
for row, group in enumerate(PERIODIC_TABLE):
  for elem in group:
    if elem not in ELEMENT_DATA:
      if row == 0:
        color = PERIODIC_TABLE_COLORS[0]

      elif row == 1:
        color = PERIODIC_TABLE_COLORS[1]
      
      elif row < 16:  
        color = PERIODIC_TABLE_COLORS[2]
 
      elif row < 26: 
        color = PERIODIC_TABLE_COLORS[3]

      elif row < 30: 
        color = PERIODIC_TABLE_COLORS[4]
      
      else:
        color = PERIODIC_TABLE_COLORS[5]
        
      ELEMENT_DATA[elem] = (0, color, (0,))

ELEMENT_DEFAULT = (0,QtGui.QColor(160, 160, 255, 255), (1,))
                   
# Other oxidation states? Coordination

ATOM = 'atom'
PROPERTY = 'property'
PROPERTIES_ATOM = [
              ('Bonding', (('Aromatic ring', 'Toggle aromatic ring', 'toggle-aromatic.png', 'bond-aromatic'),
                           ('Dative bond','Toggle dative bond', 'bond-dative.png', 'bond-dative'))),
              ('Atomic Charge', (('Add positive', 'Add positive charge', 'charge-pos.png', '+'),
                          ('Set Neutral','Set neutral charge', 'charge-none.png', '0'),
                          ('Add negative', 'Add negative charge', 'charge-neg.png', '-'))),
              ('Valence Slots', (('Add', 'Add valance', 'valence-add.png', 'v+'),
                           ('Remove', 'Remove valance', 'valence-remove.png', 'v-'))),
              ('Stereochemistry', (('Stereo centre', 'Toggle stereo centre', 'stereo.png', 'st'),
                                   ('Atom forward','Move selected atom forward', 'stereo-up.png', 'st+'),
                                   ('Atom backward', 'Move selected atom backward' ,'stereo-down.png', 'st-'))),
              ('Chirality Label', (('Set R label', 'Set R chirality label ', 'stereo-R.png', 'chiral-r'),
                             ('Set S label', 'Set S shirality label', 'stereo-S.png', 'chiral-s'),
                             ('Remove labels', 'Remove chirality label','stereo-none.png',  'chiral-n'),
                             ('Set Alpha', 'Alpha Chirality', 'stereo-a.png', 'chiral-a'),
                             ('Set Beta','Beta Chirality', 'stereo-b.png', 'chiral-b'),
                             )),] # ('R/S', None, 'chiral-rs'),
PROPERTIES_MULTI = [
              ('Atomic Exchange', (('Variable atom', 'Toggle variable atom', 'variable-atom.png', 'xv'),
                            ('Fast exchange', 'Toggle fast exchange (H+)', 'exchange-hydrogen.png', 'xf'))),
              ('NMR Groups', (('Set equivalents', 'Select multiple atoms and click Set Equivalent to set NMR equivalent labels',
                               'nmr-equivalent.png', 'e'),
                              ('Set prochirals', 'Select multiple atoms and click Set Equivalent to set NMR non-stereo (e.g. prochiral)', 'nmr-prochiral.png',  'p'),
                              ('Remove group','No atom group', 'nmr-no-group.png', 'u'))),
             ]
PROPERTIES_LINKS = [
                    ('Links', (('Add previous', 'Add pseudo link as "Previous residue"',  'link-prev.png', 'lp'),
                             ('Add next', 'Add pseudo link as "Next residue"',  'link-next.png', 'ln'),
                             ('Add generic', 'Add a generic pseudo link ', 'link.png', 'nl')))
                    ]


CHARGE_FONT = QtGui.QFont("DejaVu Sans Mono", 11, QtGui.QFont.Bold)
NEG_COLOR = QtGui.QColor(255, 40, 40, 255)
POS_COLOR = QtGui.QColor(40, 40, 255, 255)
CHARGE_BG_COLOR = QtGui.QColor(255, 255, 255, 128)
CHIRAL_FONT = QtGui.QFont("DejaVu Sans Mono", 7, QtGui.QFont.Bold)
CHIRAL_COLOR = QtGui.QColor(0, 0, 255, 255)

ELEMENT_ISO_ABUN = {
  'Ac':((0.0,227,227.0277470),),
  'Ag':((0.518390,107,106.9050930), (0.481610,109,108.9047560),),
  'Al':((1.0,27,26.9815384),),
  'Am':((0.0,243,243.0613727),(0.0,241,241.0568229),),
  'Ar':((0.996003,40,39.9623831), (0.003365,36,35.9675463), (0.000632,38,37.9627322),),
  'As':((1.0,75,74.9215964),),
  'At':((0.0,211,210.9874810), (0.0,210,209.9871310),),
  'Au':((1.0,197,196.9665520),),
  'B':((0.801000,11,11.0093055), (0.199000,10,10.0129370),),
  'Ba':((0.716980,138,137.9052410), (0.112320,137,136.9058210), (0.078540,136,135.9045700),
        (0.065920,135,134.9056830), (0.024170,134,133.9045030), (0.001060,130,129.9063100),
        (0.001010,132,131.9050560),),
  'Be':((1.0,9,9.0121821),),
  'Bh':((0.0,264,258.0984250),),
  'Bi':((1.0,209,208.9803830),),
  'Bk':((0.0,249,249.0749800), (0.0,247,247.0702990),),
  'Br':((0.506900,79,78.9183376), (0.493100,81,80.9162910),),
  'C':((0.989300,12,12.0000000), (0.010700,13,13.0033548), (0.0,14,14.0032420),),
  'Ca':((0.969410,40,39.9625912), (0.020860,44,43.9554811), (0.006470,42,41.9586183),
        (0.001870,48,47.9525340), (0.001350,43,42.9587668), (0.000040,46,45.9536928),),
  'Cd':((0.287300,114,113.9033581), (0.241300,112,111.9027572), (0.128000,111,110.9041820),
        (0.124900,110,109.9030060), (0.122200,113,112.9044009), (0.074900,116,115.9047550),
        (0.012500,106,105.9064580), (0.008900,108,107.9041830),),
  'Ce':((0.884500,140,139.9054340), (0.111140,142,141.9092400), (0.002510,138,137.9059860),
        (0.001850,136,135.9071400),),
  'Cf':((0.0,252,252.0816200), (0.0,251,251.0795800), (0.0,250,250.0764000),
        (0.0,249,249.0748470),),
  'Cl':((0.757800,35,34.9688527), (0.242200,37,36.9659026),),
  'Cm':((0.0,248,248.0723420), (0.0,247,247.0703470), (0.0,246,246.0672176),
        (0.0,245,245.0654856), (0.0,244,244.0627463), (0.0,243,243.0613822),),
  'Co':((1.0,59,58.9332002),),
  'Cr':((0.837890,52,51.9405119), (0.095010,53,52.9406538), (0.043450,50,49.9460496),
        (0.023650,54,53.9388849),),
  'Cs':((1.0,133,132.9054470),),
  'Cu':((0.691700,63,62.9296011), (0.308300,65,64.9277937),),
  'Db':((0.0,262,258.0984250),),
  'Dy':((0.281800,164,163.9291710), (0.255100,162,161.9267950), (0.249000,163,162.9287280),
        (0.189100,161,160.9269300), (0.023400,160,159.9251940), (0.001000,158,157.9244050),
        (0.000600,156,155.9242780),),
  'Er':((0.336100,166,165.9302900), (0.267800,168,167.9323680), (0.229300,167,166.9320450),
        (0.149300,170,169.9354600), (0.016100,164,163.9291970), (0.001400,162,161.9287750),),
  'Es':((0.0,252,252.0829700),),
  'Eu':((0.521900,153,152.9212260), (0.478100,151,150.9198460),),
  'F':((1.0,19,18.9984032),),
  'Fe':((0.917540,56,55.9349421), (0.058450,54,53.9396148), (0.021190,57,56.9353987),
        (0.002820,58,57.9332805),),
  'Fm':((0.0,257,257.0950990),),
  'Fr':((0.0,223,223.0197307),),
  'Ga':((0.601080,69,68.9255810), (0.398920,71,70.9247050),),
  'Gd':((0.248400,158,157.9241010), (0.218600,160,159.9270510), (0.204700,156,155.9221200),
        (0.156500,157,156.9239570), (0.148000,155,154.9226190), (0.021800,154,153.9208620),
        (0.002000,152,151.9197880),),
  'Ge':((0.362800,74,73.9211782), (0.275400,72,71.9220762), (0.208400,70,69.9242504),
        (0.077300,73,72.9234594), (0.076100,76,75.9214027),),
  'H':((0.999850,1,1.0078250), (0.000150,2,2.0141018), (0.0,3,3.0160492),),
  'He':((0.999999,4,4.0026032), (0.000001,3,3.0160293),),
  'Hf':((0.350800,180,179.9465488), (0.272800,178,177.9436977), (0.186000,177,176.9432200),
        (0.136200,179,178.9458151), (0.052600,176,175.9414018), (0.001600,174,173.9400400),),
  'Hg':((0.298600,202,201.9706260), (0.231000,200,199.9683090), (0.168700,199,198.9682620),
        (0.131800,201,200.9702850), (0.099700,198,197.9667520), (0.068700,204,203.9734760),
        (0.001500,196,195.9658150),),
  'Ho':((1.0,165,164.9303190),),
  'Hs':((0.0,277,258.0984250),),
  'I':((1.0,127,126.9044680),),
  'In':((0.957100,115,114.9038780), (0.042900,113,112.9040610),),
  'Ir':((0.627000,193,192.9629240), (0.373000,191,190.9605910),),
  'K':((0.932581,39,38.9637069), (0.067302,41,40.9618260), (0.000117,40,39.9639987),),
  'Kr':((0.570000,84,83.9115070), (0.173000,86,85.9106103), (0.115800,82,81.9134846),
        (0.114900,83,82.9141360), (0.022800,80,79.9163780), (0.003500,78,77.9203860),),
  'La':((0.999100,139,138.9063480), (0.000900,138,137.9071070),),
  'Li':((0.924100,7,7.0160040), (0.075900,6,6.0151223),),
  'Lr':((0.0,262,258.0984250),),
  'Lu':((0.974100,175,174.9407679), (0.025900,176,175.9426824),),
  'Md':((0.0,258,258.0984250), (0.0,256,256.0940500),),
  'Mg':((0.789900,24,23.9850419), (0.110100,26,25.9825930), (0.100000,25,24.9858370),),
  'Mn':((1.0,55,54.9380496),),
  'Mo':((0.241300,98,97.9054078), (0.166800,96,95.9046789), (0.159200,95,94.9058415),
        (0.148400,92,91.9068100), (0.096300,100,99.9074770), (0.095500,97,96.9060210),
        (0.092500,94,93.9050876),),
  'Mt':((0.0,268,258.0984250),),
  'N':((0.996320,14,14.0030740), (0.003680,15,15.0001089),),
  'Na':((1.0,23,22.9897697),),
  'Nb':((1.0,93,92.9063775),),
  'Nd':((0.272000,142,141.9077190), (0.238000,144,143.9100830), (0.172000,146,145.9131120),
        (0.122000,143,142.9098100), (0.083000,145,144.9125690), (0.057000,148,147.9168890),
        (0.056000,150,149.9208870),),
  'Ne':((0.904800,20,19.9924402), (0.092500,22,21.9913855), (0.002700,21,20.9938467),),
  'Ni':((0.680769,58,57.9353479), (0.262231,60,59.9307906), (0.036345,62,61.9283488),
        (0.011399,61,60.9310604), (0.009256,64,63.9279696),),
  'No':((0.0,259,258.0984250),),
  'Np':((0.0,239,239.0529314), (0.0,237,237.0481673),),
  'O':((0.997570,16,15.9949146), (0.002050,18,17.9991604), (0.000380,17,16.9991315),),
  'Os':((0.407800,192,191.9614790), (0.262600,190,189.9584450), (0.161500,189,188.9581449),
        (0.132400,188,187.9558360), (0.019600,187,186.9557479), (0.015900,186,185.9538380),
        (0.000200,184,183.9524910),),
  'P':((1.0,31,30.9737615),),
  'Pa':((1.0,231,231.0358789),),
  'Pb':((0.524000,208,207.9766360), (0.241000,206,205.9744490), (0.221000,207,206.9758810),
        (0.014000,204,203.9730290),),
  'Pd':((0.273300,106,105.9034830), (0.264600,108,107.9038940), (0.223300,105,104.9050840),
        (0.117200,110,109.9051520), (0.111400,104,103.9040350), (0.010200,102,101.9056080),),
  'Pm':((0.0,147,146.9151340), (0.0,145,144.9127440),),
  'Po':((0.0,210,209.9828570), (0.0,209,208.9824160),),
  'Pr':((1.0,141,140.9076480),),
  'Pt':((0.338320,195,194.9647740), (0.329670,194,193.9626640), (0.252420,196,195.9649350),
        (0.071630,198,197.9678760), (0.007820,192,191.9610350), (0.000140,190,189.9599300),),
  'Pu':((0.0,244,244.0641980), (0.0,242,242.0587368), (0.0,241,241.0568453),
        (0.0,240,240.0538075), (0.0,239,239.0521565), (0.0,238,238.0495534),),
  'Ra':((0.0,228,228.0310641), (0.0,226,226.0254026), (0.0,224,224.0202020),
        (0.0,223,223.0184970),),
  'Rb':((0.721700,85,84.9117893), (0.278300,87,86.9091835),),
  'Re':((0.626000,187,186.9557508), (0.374000,185,184.9529557),),
  'Rf':((0.0,261,258.0984250),),
  'Rh':((1.0,103,102.9055040),),
  'Rn':((0.0,222,222.0175705), (0.0,220,220.0113841), (0.0,211,210.9905850),),
  'Ru':((0.315500,102,101.9043495), (0.186200,104,103.9054300), (0.170600,101,100.9055822),
        (0.127600,99,98.9059393), (0.126000,100,99.9042197), (0.055400,96,95.9075980),
        (0.018700,98,97.9052870),),
  'S':((0.949300,32,31.9720707), (0.042900,34,33.9678668), (0.007600,33,32.9714585),
       (0.000200,36,35.9670809),),
  'Sb':((0.572100,121,120.9038180), (0.427900,123,122.9042157),),
  'Sc':((1.0,45,44.9559102),),
  'Se':((0.496100,80,79.9165218), (0.237700,78,77.9173095), (0.093700,76,75.9192141),
        (0.087300,82,81.9167000), (0.076300,77,76.9199146), (0.008900,74,73.9224766),),
  'Sg':((0.0,266,258.0984250),),
  'Si':((0.922297,28,27.9769265), (0.046832,29,28.9764947), (0.030872,30,29.9737702),),
  'Sm':((0.267500,152,151.9197280), (0.227500,154,153.9222050), (0.149900,147,146.9148930),
        (0.138200,149,148.9171800), (0.112400,148,147.9148180), (0.073800,150,149.9172710),
        (0.030700,144,143.9119950),),
  'Sn':((0.325800,120,119.9021966), (0.242200,118,117.9016060), (0.145400,116,115.9017440),
        (0.085900,119,118.9033090), (0.076800,117,116.9029540), (0.057900,124,123.9052746),
        (0.046300,122,121.9034401), (0.009700,112,111.9048210), (0.006600,114,113.9027820),
        (0.003400,115,114.9033460),),
  'Sr':((0.825800,88,87.9056143), (0.098600,86,85.9092624), (0.070000,87,86.9088793),
        (0.005600,84,83.9134250),),
  'Ta':((0.999880,181,180.9479960), (0.000120,180,179.9474660),),
  'Tb':((1.0,159,158.9253430),),
  'Tc':((0.0,99,98.9062546), (0.0,98,97.9072160), (0.0,97,96.9063650),),
  'Te':((0.340800,130,129.9062228), (0.317400,128,127.9044614), (0.188400,126,125.9033055),
        (0.070700,125,124.9044247), (0.047400,124,123.9028195), (0.025500,122,121.9030471),
        (0.008900,123,122.9042730), (0.000900,120,119.9040200),),
  'Th':((1.0,232,232.0380504), (0.0,230,230.0331266),),
  'Ti':((0.737200,48,47.9479471), (0.082500,46,45.9526295), (0.074400,47,46.9517638),
        (0.054100,49,48.9478708), (0.051800,50,49.9447921),),
  'Tl':((0.704760,205,204.9744120), (0.295240,203,202.9723290),),
  'Tm':((1.0,169,168.9342110),),
  'U':((0.992745,238,238.0507826), (0.007200,235,235.0439231), (0.000055,234,234.0409456),
       (0.0,236,236.0455619), (0.0,233,233.0396280),),
  'V':((0.997500,51,50.9439637), (0.002500,50,49.9471628),),
  'W':((0.306400,184,183.9509326), (0.284300,186,185.9543620), (0.265000,182,181.9482060),
       (0.143100,183,182.9502245), (0.001200,180,179.9467060),),
  'Xe':((0.268900,132,131.9041545), (0.264400,129,128.9047795), (0.211800,131,130.9050819),
        (0.104400,134,133.9053945), (0.088700,136,135.9072200), (0.040800,130,129.9035079),
        (0.019200,128,127.9035304), (0.000900,126,125.9042690), (0.000900,124,123.9058958),),
  'Y':((1.0,89,88.9058479),),
  'Yb':((0.318300,174,173.9388581), (0.218300,172,171.9363777), (0.161300,173,172.9382068),
        (0.142800,171,170.9363220), (0.127600,176,175.9425680), (0.030400,170,169.9347590),
        (0.001300,168,167.9338940),),
  'Zn':((0.486300,64,63.9291466), (0.279000,66,65.9260368), (0.187500,68,67.9248476),
        (0.041000,67,66.9271309), (0.006200,70,69.9253250),),
  'Zr':((0.514500,90,89.9047037), (0.173800,94,93.9063158), (0.171500,92,91.9050401),
        (0.112200,91,90.9056450), (0.028000,96,95.9082760),),
  }

 
 
